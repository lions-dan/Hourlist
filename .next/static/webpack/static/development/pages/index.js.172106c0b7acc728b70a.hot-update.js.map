{"version":3,"file":"static/webpack/static/development/pages/index.js.172106c0b7acc728b70a.hot-update.js","sources":["webpack:///./components/PlaylistSelector.js"],"sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from '@material-ui/core/TextField';\nimport PreviewList from './PreviewList'\n\n\nfunction getModalStyle() {\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n    overflowY: 'hidden'\n  };\n}\n\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: \"60%\",\n    height: \"80%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default function PlaylistSelector(props) {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [list,updateList] = React.useState(props.importedSong);\n  const [input, setInput] = React.useState(''); // '' is the initial state value\n\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const generateTheme = (theme)=>{\n    updateList(props.importedSong.sort(function(a,b){return a.feature[theme]-b.feature[theme]}))\n  }\n\n  \n  React.useEffect(() => {\n      generateTheme();\n    }, [list]);\n\n\n  var createPlaylist = async function(named, list, token, user_id){\n    const apiURL = \"https://api.spotify.com/v1/users/\"+user_id+\"/playlists\"\n    const data = {\"name\":named}\n    const response = await fetch(apiURL, {\n        method: 'POST',\n        mode: 'cors', \n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Authorization': 'Bearer ' + token,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n     const libraryObject = await response.json().then((playlist)=>{\n       addSongs(list,playlist,user_id,token)\n     })\n  }\n\n  var addSongs = async function(list,playlist,user_id,token){\n    const apiURL = \"https://api.spotify.com/v1/users/\"+user_id+\"/playlists/\"+playlist.id+\"/tracks\"\n    let result = list.map(a => a.uri);\n    const response = await fetch(apiURL, {\n        method: 'POST',\n        mode: 'cors', \n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Authorization': 'Bearer ' + token,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(result)\n      });\n      const libraryObject = await response.json().then((value)=>{\n\n      })\n  }\n\n  return (\n    <div>\n      <Button disabled={props.featuresGenerated} variant=\"contained\" size=\"large\" onClick={handleOpen}>\n        Choose Playlist Theme\n      </Button>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n          <Grid item xs={12}>\n          <TextField\n          id=\"outlined-basic\"\n          className={classes.textField}\n          label=\"Playlist Name\"\n          margin=\"normal\"\n          style={{width:'100%'}}\n          variant=\"outlined\"\n          value={input}\n          onChange={(e)=>setInput(e.target.value)}\n        />\n       </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                justify=\"center\"\n                className={classes.button}\n                onClick={()=>generateTheme(\"danceability\")}\n              >\n              The Dance Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={()=>generateTheme(\"energy\")}\n              >\n               The Energy Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={()=>generateTheme(\"tempo\")}\n              >\n                The Tempo Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={()=>generateTheme(\"loudness\")}\n              >\n                The Build Up\n              </Button>\n            </Grid>\n             <Grid item xs={12}>\n              <PreviewList sortedList={list} sectionId={\"List Preview\"}></PreviewList>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={()=>createPlaylist(input,list,props.token,props.user_id)}\n              >\n                Create Playlist\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAWA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AATA;AACA;AAJA;AAGA;AAHA;AAAA;AAeA;AACA;AACA;AAjBA;AAcA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AATA;AACA;AAJA;AAGA;AAHA;AAAA;AACA;AADA;AAcA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;A","sourceRoot":""}