{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Daniel/Websites/Hourlist/components/MainFrame.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Tracks from './Tracks';\nimport Playlist from './Playlist';\nimport PlaylistSelector from './PlaylistSelector';\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2)\n  }\n}));\n\nasync function getSpotifyProfile(token) {\n  const apiUrlOne = 'https://api.spotify.com/v1/me';\n  const response = await fetch(apiUrlOne, {\n    method: 'GET',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  const profileObject = await response.json();\n  return profileObject;\n}\n\nasync function addUserLibrary(token, limit) {\n  const apiURL = \"https://api.spotify.com/v1/me/tracks?limit=\" + limit;\n  const response = await fetch(apiURL, {\n    method: 'GET',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  const libraryObject = await response.json();\n  return libraryObject;\n}\n\nasync function addUserTopTracks(token, limit) {\n  const apiURL = \"https://api.spotify.com/v1/me/top/tracks?limit=\" + limit;\n  const response = await fetch(apiURL, {\n    method: 'GET',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  const libraryObject = await response.json();\n  return libraryObject;\n}\n\nasync function addLibraryFeatures(token, tracks) {\n  var arrayOfTracks = [];\n  tracks.forEach(element => {\n    arrayOfTracks.push(element.id);\n  });\n  tracks = arrayOfTracks.toString();\n  const apiURL = \"https://api.spotify.com/v1/audio-features/?ids=\" + tracks;\n  const response = await fetch(apiURL, {\n    method: 'GET',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  const libraryObject = await response.json();\n  return libraryObject;\n}\n\nvar generateReady = false;\nvar totalTime = 0;\n\nclass MainFrame extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"checkTrackSize\", dataFromChild => {\n      if (dataFromChild >= 60 && this.state.generateReady == false) {\n        console.log(\"Generate ready!\" + dataFromChild);\n        this.setState({\n          generateReady: true\n        });\n        totalTime = dataFromChild;\n      }\n    });\n\n    this.state = {\n      importedLibrary: false,\n      importedTop: false,\n      imported: [],\n      features: [],\n      generateReady: false,\n      totalTime: 0,\n      renderTable: true,\n      pickPlaylist: false,\n      open: false,\n      setOpen: false,\n      featuresGenerated: false\n    };\n  }\n\n  componentDidMount() {\n    this.getSpotifyInformation();\n  }\n\n  handleOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  handleLibraryImport() {\n    addUserLibrary(this.props.token, 10).then(librarySongs => {\n      console.log(librarySongs);\n      const trackArray = librarySongs.items.map(function (obj) {\n        return obj.track;\n      });\n      this.setState(prevState => ({\n        imported: [...prevState.imported, ...trackArray]\n      }));\n      console.log(this.state.imported);\n    });\n    this.setState({\n      importedLibrary: true\n    });\n  }\n\n  handleTopImport() {\n    addUserTopTracks(this.props.token, 10).then(topTracks => {\n      this.setState(prevState => ({\n        imported: [...prevState.imported, ...topTracks.items]\n      }));\n      console.log(this.state.imported);\n    });\n    this.setState({\n      importedTop: true\n    });\n  }\n\n  handleGenerate() {\n    addLibraryFeatures(this.props.token, this.state.imported).then(features => {\n      let importedSong = this.state.imported;\n      var count = 0;\n      importedSong.forEach(element => {\n        element.feature = features.audio_features[count];\n        count = count + 1;\n      });\n      this.setState({\n        imported: importedSong,\n        renderTable: false,\n        pickPlaylist: true,\n        generateReady: false,\n        featuresGenerated: true\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Container, {\n      maxWidth: \"lg\",\n      style: {\n        padding: \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, __jsx(Paper, {\n      style: {\n        margin: \"5%\",\n        padding: \"5%\",\n        height: '100%',\n        backgroundImage: 'linear-gradient(60deg, #29323c 0%, #485563 100%)',\n        display: 'grid'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, __jsx(Button, {\n      disabled: this.state.importedLibrary,\n      variant: \"contained\",\n      size: \"large\",\n      onClick: () => this.handleLibraryImport(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \" Import Saved Tracks \")), __jsx(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, __jsx(Button, {\n      disabled: this.state.importedTop,\n      variant: \"contained\",\n      size: \"large\",\n      onClick: () => this.handleTopImport(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \" Import Library Tracks \")), __jsx(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, __jsx(Button, {\n      disabled: !this.state.generateReady,\n      variant: \"contained\",\n      size: \"large\",\n      onClick: () => this.handleGenerate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \" Generate Features \")), __jsx(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, __jsx(PlaylistSelector, {\n      token: this.props.token,\n      featuresGenerated: !this.state.featuresGenerated,\n      importedSong: this.state.imported,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.state.renderTable ? __jsx(Tracks, {\n      generateReady: this.checkTrackSize,\n      tracksImported: this.state.importedLibrary || this.state.importedTop,\n      allTracks: this.state.imported,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }) : __jsx(Playlist, {\n      allTracks: this.state.imported,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default MainFrame;","map":{"version":3,"sources":["/Users/Daniel/Websites/Hourlist/components/MainFrame.js"],"names":["React","Container","styled","Paper","makeStyles","Button","Grid","Tracks","Playlist","PlaylistSelector","useStyles","theme","typography","padding","spacing","getSpotifyProfile","token","apiUrlOne","response","fetch","method","mode","cache","credentials","headers","profileObject","json","addUserLibrary","limit","apiURL","libraryObject","addUserTopTracks","addLibraryFeatures","tracks","arrayOfTracks","forEach","element","push","id","toString","generateReady","totalTime","MainFrame","Component","constructor","props","dataFromChild","state","console","log","setState","importedLibrary","importedTop","imported","features","renderTable","pickPlaylist","open","setOpen","featuresGenerated","componentDidMount","getSpotifyInformation","handleOpen","handleClose","handleLibraryImport","then","librarySongs","trackArray","items","map","obj","track","prevState","handleTopImport","topTracks","handleGenerate","importedSong","count","feature","audio_features","render","margin","height","backgroundImage","display","checkTrackSize"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Tracks from './Tracks'\nimport Playlist from './Playlist'\nimport PlaylistSelector from './PlaylistSelector'\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\n\nasync function getSpotifyProfile(token){\n    const apiUrlOne = 'https://api.spotify.com/v1/me'\n    const response = await fetch(apiUrlOne, {\n        method: 'GET',\n        mode: 'cors', \n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      const profileObject = await response.json();\n      return profileObject\n}\n\nasync function addUserLibrary(token,limit){\n    const apiURL = \"https://api.spotify.com/v1/me/tracks?limit=\"+limit\n    const response = await fetch(apiURL, {\n        method: 'GET',\n        mode: 'cors', \n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n     const libraryObject = await response.json();\n     return libraryObject\n}\n\nasync function addUserTopTracks(token, limit){\n    const apiURL = \"https://api.spotify.com/v1/me/top/tracks?limit=\"+limit\n    const response = await fetch(apiURL, {\n        method: 'GET',\n        mode: 'cors', \n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n     const libraryObject = await response.json();\n     return libraryObject\n}\n\n\nasync function addLibraryFeatures(token, tracks){\n  var arrayOfTracks = []\n  tracks.forEach(element => {\n    arrayOfTracks.push(element.id)\n  });\n  tracks = arrayOfTracks.toString()\n  const apiURL = \"https://api.spotify.com/v1/audio-features/?ids=\"+tracks\n  const response = await fetch(apiURL, {\n      method: 'GET',\n      mode: 'cors', \n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    });\n   const libraryObject = await response.json();\n\n   return libraryObject\n}\n\n\nvar generateReady = false;\nvar totalTime = 0;\n\nclass MainFrame extends React.Component {\n    constructor(props){\n     super(props)\n        this.state = {importedLibrary:false, importedTop:false, imported:[], features:[], generateReady:false, totalTime:0, renderTable: true, pickPlaylist: false, open:false, setOpen: false, featuresGenerated:false}\n      }\n    componentDidMount(){\n      this.getSpotifyInformation()\n    }\n\n    handleOpen(){\n      this.setState({open:true})\n    }\n    handleClose(){\n      this.setState({open:false})\n    }\n    \n    handleLibraryImport(){\n      addUserLibrary(this.props.token,10).then((librarySongs)=>{\n          console.log(librarySongs)\n          const trackArray = librarySongs.items.map(function (obj) {\n            return obj.track;\n          });\n          this.setState(prevState => ({\n            imported: [...prevState.imported,...trackArray]\n          }))\n          console.log(this.state.imported)\n        })\n        this.setState({importedLibrary: true})\n      }\n\n    handleTopImport(){\n     addUserTopTracks(this.props.token,10).then((topTracks)=>{\n        this.setState(prevState => ({\n          imported: [...prevState.imported,...topTracks.items]\n        }))\n        console.log(this.state.imported)\n     })\n     this.setState({importedTop: true})\n    }\n\n    checkTrackSize = (dataFromChild)=>{\n      if(dataFromChild >= 60 && this.state.generateReady == false){\n        console.log(\"Generate ready!\" + dataFromChild)\n        this.setState({generateReady:true})\n        totalTime = dataFromChild\n      }\n    }\n    handleGenerate(){\n      addLibraryFeatures(this.props.token, this.state.imported).then((features)=>{\n        let importedSong = this.state.imported\n        var count =  0;\n        importedSong.forEach(element => {\n          element.feature = features.audio_features[count];\n          count = count + 1;\n        });\n        this.setState({imported:importedSong,renderTable:false, pickPlaylist: true, generateReady: false, featuresGenerated:true})\n    })\n  }\n\n\n\n\n    render(){\n        return( \n            <Container  maxWidth=\"lg\" style={{padding: \"5%\"}}>\n                <Paper style={{margin:\"5%\", padding:\"5%\", height: '100%', backgroundImage:'linear-gradient(60deg, #29323c 0%, #485563 100%)',  display: 'grid',}}> \n                <Grid container spacing={5}>\n                <Grid item xs>\n                  <Button  disabled={this.state.importedLibrary} variant=\"contained\" size=\"large\"   onClick={()=>(this.handleLibraryImport())}> Import Saved Tracks </Button>\n                </Grid>\n                  <Grid item xs>\n                  <Button disabled={this.state.importedTop} variant=\"contained\" size=\"large\"  onClick={()=>(this.handleTopImport())} > Import Library Tracks </Button>\n                 </Grid>\n                 <Grid item xs>\n                   <Button  disabled={!this.state.generateReady} variant=\"contained\" size=\"large\"  onClick={()=>(this.handleGenerate())} > Generate Features </Button>\n                  </Grid>\n                  <Grid item xs>\n                    <PlaylistSelector token={this.props.token} featuresGenerated={!this.state.featuresGenerated} importedSong={this.state.imported}/> \n                  </Grid>\n                 <Grid item xs={12}>\n                  {(this.state.renderTable) ? <Tracks generateReady={this.checkTrackSize} tracksImported={this.state.importedLibrary || this.state.importedTop} allTracks={this.state.imported}/> : <Playlist allTracks={this.state.imported}/> }\n                 </Grid>\n                </Grid>\n                </Paper>\n            </Container>\n        )\n    }\n\n\n\n}\n export  default MainFrame;"]},"metadata":{},"sourceType":"module"}