{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/Daniel/Websites/Hourlist/components/PlaylistSelector.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Popover from \"@material-ui/core/Popover\";\n\nfunction getModalStyle() {\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n    overflowY: \"hidden\"\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: \"60%\",\n    height: \"80%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  typography: {\n    padding: theme.spacing(2)\n  },\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    overflow: \"auto\",\n    color: \"black\",\n    height: \"200px\",\n    maxHeight: 200\n  },\n  listSection: {\n    backgroundColor: \"inherit\"\n  },\n  ul: {\n    backgroundColor: \"inherit\",\n    padding: 0\n  }\n}));\nexport default function PlaylistSelector(props) {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [arrayOfSongs, updateList] = React.useState(props.importedSong);\n  const [input, setInput] = React.useState(\"\"); // '' is the initial state value\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const ancHandleOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const ancHandleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const popOpen = Boolean(anchorEl);\n  const id = popOpen ? \"simple-popover\" : undefined;\n  React.useEffect(() => {\n    updateList(prevArray => [...prevArray]);\n  }, [1]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const generateTheme = theme => {\n    const sortedArray = props.importedSong.sort(function (a, b) {\n      return a.feature[theme] - b.feature[theme];\n    });\n    console.log(sortedArray);\n    updateList([...sortedArray]);\n  };\n\n  var createPlaylist = async function (named, list, token, user_id) {\n    const apiURL = \"https://api.spotify.com/v1/users/\" + user_id + \"/playlists\";\n    const data = {\n      name: named\n    };\n    const response = await fetch(apiURL, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: _JSON$stringify(data)\n    });\n    const libraryObject = await response.json().then(playlist => {\n      addSongs(list, playlist, user_id, token);\n    });\n  };\n\n  var addSongs = async function (list, playlist, user_id, token) {\n    const apiURL = \"https://api.spotify.com/v1/users/\" + user_id + \"/playlists/\" + playlist.id + \"/tracks\";\n    let result = list.map(a => a.uri);\n    const response = await fetch(apiURL, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: _JSON$stringify(result)\n    });\n    const libraryObject = await response.json().then(value => {});\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(Button, {\n    disabled: props.featuresGenerated,\n    variant: \"contained\",\n    size: \"large\",\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Choose Playlist Theme\"), __jsx(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"stretch\",\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    className: classes.textField,\n    label: \"Playlist Name\",\n    margin: \"normal\",\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outlined\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    justify: \"center\",\n    className: classes.button,\n    onClick: () => {\n      generateTheme(\"danceability\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"The Dance Build Up\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button,\n    onClick: () => {\n      generateTheme(\"energy\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"The Energy Build Up\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    className: classes.button,\n    onClick: () => {\n      generateTheme(\"tempo\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"The Tempo Build Up\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => {\n      generateTheme(\"loudness\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"The Build Up\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, __jsx(List, {\n    className: classes.root,\n    subheader: __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    key: `Section Updated`,\n    className: classes.listSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: classes.ul,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, __jsx(ListSubheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, `Build Up Generated Playlist`), arrayOfSongs.map((item, index) => __jsx(ListItem, {\n    style: {\n      color: \"black\"\n    },\n    key: item.id + index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, __jsx(ListItemText, {\n    primary: `${item.name} by ${item.artists[0].name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }))))))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    \"aria-describedby\": id,\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => {\n      createPlaylist(input, list, props.token, props.user_id);\n      handleOpen();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Create Playlist\"), __jsx(Popover, {\n    id: id,\n    open: popOpen,\n    anchorEl: anchorEl,\n    onClose: ancHandleClose,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    className: classes.typography,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, \"The content of the Popover.\")))))));\n}","map":{"version":3,"sources":["/Users/Daniel/Websites/Hourlist/components/PlaylistSelector.js"],"names":["React","Grid","makeStyles","Button","Modal","TextField","List","ListItem","ListItemText","ListSubheader","Popover","getModalStyle","top","left","transform","overflowY","useStyles","theme","paper","position","width","height","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","typography","root","overflow","color","maxHeight","listSection","ul","PlaylistSelector","props","classes","modalStyle","useState","open","setOpen","arrayOfSongs","updateList","importedSong","input","setInput","anchorEl","setAnchorEl","ancHandleOpen","event","currentTarget","ancHandleClose","popOpen","Boolean","id","undefined","useEffect","prevArray","handleOpen","handleClose","generateTheme","sortedArray","sort","a","b","feature","console","log","createPlaylist","named","list","token","user_id","apiURL","data","name","response","fetch","method","mode","cache","credentials","headers","Authorization","body","libraryObject","json","then","playlist","addSongs","result","map","uri","value","featuresGenerated","textField","e","target","button","item","index","artists","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Popover from \"@material-ui/core/Popover\";\n\nfunction getModalStyle() {\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n    overflowY: \"hidden\"\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: \"60%\",\n    height: \"80%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  typography: {\n    padding: theme.spacing(2)\n  },\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    overflow: \"auto\",\n    color: \"black\",\n    height: \"200px\",\n    maxHeight: 200\n  },\n  listSection: {\n    backgroundColor: \"inherit\"\n  },\n  ul: {\n    backgroundColor: \"inherit\",\n    padding: 0\n  }\n}));\nexport default function PlaylistSelector(props) {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [arrayOfSongs, updateList] = React.useState(props.importedSong);\n  const [input, setInput] = React.useState(\"\"); // '' is the initial state value\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const ancHandleOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const ancHandleClose = () => {\n    setAnchorEl(null);\n  };\n  const popOpen = Boolean(anchorEl);\n  const id = popOpen ? \"simple-popover\" : undefined;\n\n  React.useEffect(() => {\n    updateList(prevArray => [...prevArray]);\n  }, [1]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const generateTheme = theme => {\n    const sortedArray = props.importedSong.sort(function(a, b) {\n      return a.feature[theme] - b.feature[theme];\n    });\n    console.log(sortedArray);\n    updateList([...sortedArray]);\n  };\n\n  var createPlaylist = async function(named, list, token, user_id) {\n    const apiURL = \"https://api.spotify.com/v1/users/\" + user_id + \"/playlists\";\n    const data = { name: named };\n    const response = await fetch(apiURL, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const libraryObject = await response.json().then(playlist => {\n      addSongs(list, playlist, user_id, token);\n    });\n  };\n\n  var addSongs = async function(list, playlist, user_id, token) {\n    const apiURL =\n      \"https://api.spotify.com/v1/users/\" +\n      user_id +\n      \"/playlists/\" +\n      playlist.id +\n      \"/tracks\";\n    let result = list.map(a => a.uri);\n    const response = await fetch(apiURL, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(result)\n    });\n    const libraryObject = await response.json().then(value => {});\n  };\n\n  return (\n    <div>\n      <Button\n        disabled={props.featuresGenerated}\n        variant=\"contained\"\n        size=\"large\"\n        onClick={handleOpen}\n      >\n        Choose Playlist Theme\n      </Button>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12}>\n              <TextField\n                id=\"outlined-basic\"\n                className={classes.textField}\n                label=\"Playlist Name\"\n                margin=\"normal\"\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={input}\n                onChange={e => setInput(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                justify=\"center\"\n                className={classes.button}\n                onClick={() => {\n                  generateTheme(\"danceability\");\n                }}\n              >\n                The Dance Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={() => {\n                  generateTheme(\"energy\");\n                }}\n              >\n                The Energy Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  generateTheme(\"tempo\");\n                }}\n              >\n                The Tempo Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={() => {\n                  generateTheme(\"loudness\");\n                }}\n              >\n                The Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              <List className={classes.root} subheader={<li />}>\n                <li key={`Section Updated`} className={classes.listSection}>\n                  <ul className={classes.ul}>\n                    <ListSubheader>{`Build Up Generated Playlist`}</ListSubheader>\n                    {arrayOfSongs.map((item, index) => (\n                      <ListItem\n                        style={{ color: \"black\" }}\n                        key={item.id + index}\n                      >\n                        <ListItemText\n                          primary={`${item.name} by ${item.artists[0].name}`}\n                        />\n                      </ListItem>\n                    ))}\n                  </ul>\n                </li>\n              </List>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                aria-describedby={id}\n                color=\"primary\"\n                className={classes.button}\n                onClick={() => {\n                  createPlaylist(input, list, props.token, props.user_id);\n                  handleOpen();\n                }}\n              >\n                Create Playlist\n              </Button>\n              <Popover\n                id={id}\n                open={popOpen}\n                anchorEl={anchorEl}\n                onClose={ancHandleClose}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"center\"\n                }}\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"center\"\n                }}\n              >\n                <h4 className={classes.typography}>\n                  The content of the Popover.\n                </h4>\n              </Popover>\n            </Grid>\n          </Grid>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}