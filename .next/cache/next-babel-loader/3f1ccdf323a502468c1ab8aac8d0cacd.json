{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Daniel/Websites/Hourlist/components/PlaylistSelector.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\n\nfunction getModalStyle() {\n  return {\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    overflowY: \"hidden\"\n  };\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    modal: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    paper: {\n      position: \"absolute\",\n      width: \"60%\",\n      height: \"80%\",\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #000\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    },\n    typography: {\n      padding: theme.spacing(2)\n    },\n    root: {\n      width: \"100%\",\n      backgroundColor: theme.palette.background.paper,\n      position: \"relative\",\n      overflow: \"auto\",\n      color: \"black\",\n      height: \"200px\",\n      maxHeight: 200\n    },\n    listSection: {\n      backgroundColor: \"inherit\"\n    },\n    ul: {\n      backgroundColor: \"inherit\",\n      padding: 0\n    }\n  };\n});\nexport default function PlaylistSelector(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(getModalStyle),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      modalStyle = _React$useState2[0];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  var _React$useState5 = React.useState(props.importedSong),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      arrayOfSongs = _React$useState6[0],\n      updateList = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      input = _React$useState8[0],\n      setInput = _React$useState8[1]; // '' is the initial state value\n\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      created = _React$useState10[0],\n      setCreated = _React$useState10[1];\n\n  React.useEffect(function () {\n    updateList(function (prevArray) {\n      return _toConsumableArray(prevArray);\n    });\n  }, [1]);\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var modalClose = function modalClose() {\n    setCreated(false);\n  };\n\n  co;\n\n  var generateTheme = function generateTheme(theme) {\n    var sortedArray = props.importedSong.sort(function (a, b) {\n      return a.feature[theme] - b.feature[theme];\n    });\n    console.log(sortedArray);\n    updateList(_toConsumableArray(sortedArray));\n  };\n\n  var createPlaylist =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(named, list, token, user_id) {\n      var apiURL, data, response, libraryObject;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              apiURL = \"https://api.spotify.com/v1/users/\" + user_id + \"/playlists\";\n              data = {\n                name: named\n              };\n              _context.next = 4;\n              return fetch(apiURL, {\n                method: \"POST\",\n                mode: \"cors\",\n                cache: \"no-cache\",\n                credentials: \"same-origin\",\n                headers: {\n                  Authorization: \"Bearer \" + token,\n                  \"Content-Type\": \"application/json\"\n                },\n                body: _JSON$stringify(data)\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json().then(function (playlist) {\n                addSongs(list, playlist, user_id, token);\n                setCreated(true);\n              }, function (error) {\n                console.log(error);\n                setCreated(false);\n              });\n\n            case 7:\n              libraryObject = _context.sent;\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createPlaylist(_x, _x2, _x3, _x4) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var addSongs =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(list, playlist, user_id, token) {\n      var apiURL, result, response, libraryObject;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              apiURL = \"https://api.spotify.com/v1/users/\" + user_id + \"/playlists/\" + playlist.id + \"/tracks\";\n              result = list.map(function (a) {\n                return a.uri;\n              });\n              _context2.next = 4;\n              return fetch(apiURL, {\n                method: \"POST\",\n                mode: \"cors\",\n                cache: \"no-cache\",\n                credentials: \"same-origin\",\n                headers: {\n                  Authorization: \"Bearer \" + token,\n                  \"Content-Type\": \"application/json\"\n                },\n                body: _JSON$stringify(result)\n              });\n\n            case 4:\n              response = _context2.sent;\n              _context2.next = 7;\n              return response.json().then(function (value) {});\n\n            case 7:\n              libraryObject = _context2.sent;\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function addSongs(_x5, _x6, _x7, _x8) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(Button, {\n    disabled: props.featuresGenerated,\n    variant: \"contained\",\n    size: \"large\",\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Choose Playlist Theme\"), __jsx(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"stretch\",\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    className: classes.textField,\n    label: \"Playlist Name\",\n    margin: \"normal\",\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outlined\",\n    value: input,\n    onChange: function onChange(e) {\n      return setInput(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    justify: \"center\",\n    className: classes.button,\n    onClick: function onClick() {\n      generateTheme(\"danceability\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"The Dance Build Up\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button,\n    onClick: function onClick() {\n      generateTheme(\"energy\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"The Energy Build Up\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    className: classes.button,\n    onClick: function onClick() {\n      generateTheme(\"tempo\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"The Tempo Build Up\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: function onClick() {\n      generateTheme(\"loudness\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"The Build Up\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, __jsx(List, {\n    className: classes.root,\n    subheader: __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    key: \"Section Updated\",\n    className: classes.listSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: classes.ul,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, __jsx(ListSubheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"Build Up Generated Playlist\"), arrayOfSongs.map(function (item, index) {\n    return __jsx(ListItem, {\n      style: {\n        color: \"black\"\n      },\n      key: item.id + index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, __jsx(ListItemText, {\n      primary: \"\".concat(item.name, \" by \").concat(item.artists[0].name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }));\n  }))))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    \"aria-describedby\": id,\n    color: \"primary\",\n    className: classes.button,\n    onClick: function onClick() {\n      createPlaylist(input, arrayOfSongs, props.token, props.user_id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Create Playlist\"), __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: created,\n    onClose: setCreated,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, __jsx(Fade, {\n    \"in\": created,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    id: \"transition-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, \"Transition modal\"), __jsx(\"p\", {\n    id: \"transition-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"react-transition-group animates me.\")))))))));\n}","map":{"version":3,"sources":["/Users/Daniel/Websites/Hourlist/components/PlaylistSelector.js"],"names":["React","Grid","makeStyles","Button","Modal","TextField","List","ListItem","ListItemText","ListSubheader","Backdrop","Fade","getModalStyle","top","left","transform","overflowY","useStyles","theme","modal","display","alignItems","justifyContent","paper","position","width","height","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","typography","root","overflow","color","maxHeight","listSection","ul","PlaylistSelector","props","classes","useState","modalStyle","open","setOpen","importedSong","arrayOfSongs","updateList","input","setInput","created","setCreated","useEffect","prevArray","handleOpen","handleClose","modalClose","co","generateTheme","sortedArray","sort","a","b","feature","console","log","createPlaylist","named","list","token","user_id","apiURL","data","name","fetch","method","mode","cache","credentials","headers","Authorization","body","response","json","then","playlist","addSongs","error","libraryObject","id","result","map","uri","value","featuresGenerated","textField","e","target","button","item","index","artists","timeout"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nfunction getModalStyle() {\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n    overflowY: \"hidden\"\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    position: \"absolute\",\n    width: \"60%\",\n    height: \"80%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  typography: {\n    padding: theme.spacing(2)\n  },\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    overflow: \"auto\",\n    color: \"black\",\n    height: \"200px\",\n    maxHeight: 200\n  },\n  listSection: {\n    backgroundColor: \"inherit\"\n  },\n  ul: {\n    backgroundColor: \"inherit\",\n    padding: 0\n  }\n}));\nexport default function PlaylistSelector(props) {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [arrayOfSongs, updateList] = React.useState(props.importedSong);\n  const [input, setInput] = React.useState(\"\"); // '' is the initial state value\n  const [created, setCreated] = React.useState(false);\n\n  React.useEffect(() => {\n    updateList(prevArray => [...prevArray]);\n  }, [1]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const modalClose = () => {\n    setCreated(false)\n  }\n  co\n  const generateTheme = theme => {\n    const sortedArray = props.importedSong.sort(function(a, b) {\n      return a.feature[theme] - b.feature[theme];\n    });\n    console.log(sortedArray);\n    updateList([...sortedArray]);\n  };\n\n  var createPlaylist = async function(named, list, token, user_id) {\n    const apiURL = \"https://api.spotify.com/v1/users/\" + user_id + \"/playlists\";\n    const data = { name: named };\n    const response = await fetch(apiURL, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const libraryObject = await response.json().then(\n      playlist => {\n        addSongs(list, playlist, user_id, token);\n        setCreated(true);\n      },\n      error => {\n        console.log(error);\n        setCreated(false);\n      }\n    );\n  };\n\n  var addSongs = async function(list, playlist, user_id, token) {\n    const apiURL =\n      \"https://api.spotify.com/v1/users/\" +\n      user_id +\n      \"/playlists/\" +\n      playlist.id +\n      \"/tracks\";\n    let result = list.map(a => a.uri);\n    const response = await fetch(apiURL, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(result)\n    });\n    const libraryObject = await response.json().then(value => {});\n  };\n\n  return (\n    <div>\n      <Button\n        disabled={props.featuresGenerated}\n        variant=\"contained\"\n        size=\"large\"\n        onClick={handleOpen}\n      >\n        Choose Playlist Theme\n      </Button>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12}>\n              <TextField\n                id=\"outlined-basic\"\n                className={classes.textField}\n                label=\"Playlist Name\"\n                margin=\"normal\"\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={input}\n                onChange={e => setInput(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                justify=\"center\"\n                className={classes.button}\n                onClick={() => {\n                  generateTheme(\"danceability\");\n                }}\n              >\n                The Dance Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={() => {\n                  generateTheme(\"energy\");\n                }}\n              >\n                The Energy Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  generateTheme(\"tempo\");\n                }}\n              >\n                The Tempo Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={() => {\n                  generateTheme(\"loudness\");\n                }}\n              >\n                The Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              <List className={classes.root} subheader={<li />}>\n                <li key={`Section Updated`} className={classes.listSection}>\n                  <ul className={classes.ul}>\n                    <ListSubheader>{`Build Up Generated Playlist`}</ListSubheader>\n                    {arrayOfSongs.map((item, index) => (\n                      <ListItem\n                        style={{ color: \"black\" }}\n                        key={item.id + index}\n                      >\n                        <ListItemText\n                          primary={`${item.name} by ${item.artists[0].name}`}\n                        />\n                      </ListItem>\n                    ))}\n                  </ul>\n                </li>\n              </List>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                aria-describedby={id}\n                color=\"primary\"\n                className={classes.button}\n                onClick={() => {\n                  createPlaylist(\n                    input,\n                    arrayOfSongs,\n                    props.token,\n                    props.user_id\n                  );\n                }}\n              >\n                Create Playlist\n              </Button>\n              <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={created}\n                onClose={setCreated}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                  timeout: 500\n                }}\n              >\n                <Fade in={created}>\n                  <div className={classes.paper}>\n                    <h2 id=\"transition-modal-title\">Transition modal</h2>\n                    <p id=\"transition-modal-description\">\n                      react-transition-group animates me.\n                    </p>\n                  </div>\n                </Fade>\n              </Modal>\n            </Grid>\n          </Grid>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}