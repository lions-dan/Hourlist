{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/Daniel/Websites/Hourlist/components/PlaylistSelector.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\n\nfunction getModalStyle() {\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n    overflowY: \"hidden\"\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    position: \"absolute\",\n    width: \"60%\",\n    height: \"80%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  typography: {\n    padding: theme.spacing(2)\n  },\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    overflow: \"auto\",\n    color: \"black\",\n    height: \"200px\",\n    maxHeight: 200\n  },\n  listSection: {\n    backgroundColor: \"inherit\"\n  },\n  ul: {\n    backgroundColor: \"inherit\",\n    padding: 0\n  }\n}));\nexport default function PlaylistSelector(props) {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [arrayOfSongs, updateList] = React.useState(props.importedSong);\n  const [input, setInput] = React.useState(\"\"); // '' is the initial state value\n\n  const [created, setCreated] = React.useState(false);\n  const [feedback, setFeedback] = React.useState(\"\");\n  React.useEffect(() => {\n    updateList(prevArray => [...prevArray]);\n  }, [1]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const modalClose = () => {\n    setCreated(false);\n  };\n\n  const generateTheme = theme => {\n    const sortedArray = props.importedSong.sort(function (a, b) {\n      return a.feature[theme] - b.feature[theme];\n    });\n    console.log(sortedArray);\n    updateList([...sortedArray]);\n  };\n\n  var createPlaylist = async function (named, list, token, user_id) {\n    const apiURL = \"https://api.spotify.com/v1/users/\" + user_id + \"/playlists\";\n    const data = {\n      name: named\n    };\n    const response = await fetch(apiURL, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: _JSON$stringify(data)\n    });\n    const libraryObject = await response.json().then(playlist => {\n      addSongs(list, playlist, user_id, token);\n      setCreated(true);\n      setFeedback(\"Created Playlist Successfully\");\n    }, error => {\n      console.log(error);\n      setCreated(false);\n      setFeedback(\"Playlist Failed to Generate\");\n    });\n  };\n\n  var addSongs = async function (list, playlist, user_id, token) {\n    const apiURL = \"https://api.spotify.com/v1/users/\" + user_id + \"/playlists/\" + playlist.id + \"/tracks\";\n    let result = list.map(a => a.uri);\n    const response = await fetch(apiURL, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: _JSON$stringify(result)\n    });\n    const libraryObject = await response.json().then(value => {});\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Button, {\n    disabled: props.featuresGenerated,\n    variant: \"contained\",\n    size: \"large\",\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Choose Playlist Theme\"), __jsx(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"stretch\",\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    className: classes.textField,\n    label: \"Playlist Name\",\n    margin: \"normal\",\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outlined\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    justify: \"center\",\n    className: classes.button,\n    onClick: () => {\n      generateTheme(\"danceability\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"The Dance Build Up\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button,\n    onClick: () => {\n      generateTheme(\"energy\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"The Energy Build Up\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    className: classes.button,\n    onClick: () => {\n      generateTheme(\"tempo\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"The Tempo Build Up\")), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => {\n      generateTheme(\"loudness\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"The Build Up\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, __jsx(List, {\n    className: classes.root,\n    subheader: __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    key: `Section Updated`,\n    className: classes.listSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: classes.ul,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, __jsx(ListSubheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, `Build Up Generated Playlist`), arrayOfSongs.map((item, index) => __jsx(ListItem, {\n    style: {\n      color: \"black\"\n    },\n    key: item.id + index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, __jsx(ListItemText, {\n    primary: `${item.name} by ${item.artists[0].name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }))))))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => {\n      createPlaylist(input, arrayOfSongs, props.token, props.user_id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Create Playlist\"), __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: created,\n    onClose: modalClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, __jsx(Fade, {\n    in: created,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    id: \"transition-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, \"Transition modal\"), __jsx(\"p\", {\n    id: \"transition-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"react-transition-group animates me.\")))))))));\n}","map":{"version":3,"sources":["/Users/Daniel/Websites/Hourlist/components/PlaylistSelector.js"],"names":["React","Grid","makeStyles","Button","Modal","TextField","List","ListItem","ListItemText","ListSubheader","Backdrop","Fade","getModalStyle","top","left","transform","overflowY","useStyles","theme","modal","display","alignItems","justifyContent","paper","position","width","height","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","typography","root","overflow","color","maxHeight","listSection","ul","PlaylistSelector","props","classes","modalStyle","useState","open","setOpen","arrayOfSongs","updateList","importedSong","input","setInput","created","setCreated","feedback","setFeedback","useEffect","prevArray","handleOpen","handleClose","modalClose","generateTheme","sortedArray","sort","a","b","feature","console","log","createPlaylist","named","list","token","user_id","apiURL","data","name","response","fetch","method","mode","cache","credentials","headers","Authorization","body","libraryObject","json","then","playlist","addSongs","error","id","result","map","uri","value","featuresGenerated","textField","e","target","button","item","index","artists","timeout"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nfunction getModalStyle() {\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n    overflowY: \"hidden\"\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    position: \"absolute\",\n    width: \"60%\",\n    height: \"80%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  typography: {\n    padding: theme.spacing(2)\n  },\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    overflow: \"auto\",\n    color: \"black\",\n    height: \"200px\",\n    maxHeight: 200\n  },\n  listSection: {\n    backgroundColor: \"inherit\"\n  },\n  ul: {\n    backgroundColor: \"inherit\",\n    padding: 0\n  }\n}));\nexport default function PlaylistSelector(props) {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [arrayOfSongs, updateList] = React.useState(props.importedSong);\n  const [input, setInput] = React.useState(\"\"); // '' is the initial state value\n  const [created, setCreated] = React.useState(false);\n  const [feedback, setFeedback] = React.useState(\"\")\n  React.useEffect(() => {\n    updateList(prevArray => [...prevArray]);\n  }, [1]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const modalClose = () => {\n    setCreated(false)\n  }\n  const generateTheme = theme => {\n    const sortedArray = props.importedSong.sort(function(a, b) {\n      return a.feature[theme] - b.feature[theme];\n    });\n    console.log(sortedArray);\n    updateList([...sortedArray]);\n  };\n\n  var createPlaylist = async function(named, list, token, user_id) {\n    const apiURL = \"https://api.spotify.com/v1/users/\" + user_id + \"/playlists\";\n    const data = { name: named };\n    const response = await fetch(apiURL, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const libraryObject = await response.json().then(\n      playlist => {\n        addSongs(list, playlist, user_id, token);\n        setCreated(true);\n        setFeedback(\"Created Playlist Successfully\")\n      },\n      error => {\n        console.log(error);\n        setCreated(false);\n        setFeedback(\"Playlist Failed to Generate\")\n      }\n    );\n  };\n\n  var addSongs = async function(list, playlist, user_id, token) {\n    const apiURL =\n      \"https://api.spotify.com/v1/users/\" +\n      user_id +\n      \"/playlists/\" +\n      playlist.id +\n      \"/tracks\";\n    let result = list.map(a => a.uri);\n    const response = await fetch(apiURL, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(result)\n    });\n    const libraryObject = await response.json().then(value => {});\n  };\n\n  return (\n    <div>\n      <Button\n        disabled={props.featuresGenerated}\n        variant=\"contained\"\n        size=\"large\"\n        onClick={handleOpen}\n      >\n        Choose Playlist Theme\n      </Button>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12}>\n              <TextField\n                id=\"outlined-basic\"\n                className={classes.textField}\n                label=\"Playlist Name\"\n                margin=\"normal\"\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={input}\n                onChange={e => setInput(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                justify=\"center\"\n                className={classes.button}\n                onClick={() => {\n                  generateTheme(\"danceability\");\n                }}\n              >\n                The Dance Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={() => {\n                  generateTheme(\"energy\");\n                }}\n              >\n                The Energy Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.button}\n                onClick={() => {\n                  generateTheme(\"tempo\");\n                }}\n              >\n                The Tempo Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={() => {\n                  generateTheme(\"loudness\");\n                }}\n              >\n                The Build Up\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              <List className={classes.root} subheader={<li />}>\n                <li key={`Section Updated`} className={classes.listSection}>\n                  <ul className={classes.ul}>\n                    <ListSubheader>{`Build Up Generated Playlist`}</ListSubheader>\n                    {arrayOfSongs.map((item, index) => (\n                      <ListItem\n                        style={{ color: \"black\" }}\n                        key={item.id + index}\n                      >\n                        <ListItemText\n                          primary={`${item.name} by ${item.artists[0].name}`}\n                        />\n                      </ListItem>\n                    ))}\n                  </ul>\n                </li>\n              </List>\n            </Grid>\n            <Grid item xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={() => {\n                  createPlaylist(\n                    input,\n                    arrayOfSongs,\n                    props.token,\n                    props.user_id\n                  );\n                }}\n              >\n                Create Playlist\n              </Button>\n              <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={created}\n                onClose={modalClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                  timeout: 500\n                }}\n              >\n                <Fade in={created}>\n                  <div className={classes.paper}>\n                    <h2 id=\"transition-modal-title\">Transition modal</h2>\n                    <p id=\"transition-modal-description\">\n                      react-transition-group animates me.\n                    </p>\n                  </div>\n                </Fade>\n              </Modal>\n            </Grid>\n          </Grid>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}